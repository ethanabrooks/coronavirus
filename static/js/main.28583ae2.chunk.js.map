{"version":3,"sources":["App.tsx","serviceWorker.js","index.js"],"names":["margin","Chart","rawData","React","useEffect","listener","setWindow","width","window","innerWidth","height","innerHeight","addEventListener","removeEventListener","useState","mousePos","setMousePos","highlightedState","setHighlightedState","selecting","setSelecting","zoom","setZoom","parsedData","useMemo","List","map","e","date","Date","dateChecked","valueOf","isNaN","filter","isPresent","statesToDates","groupBy","state","entries","first","positive","toOrderedMap","sortBy","_","k","last","Set","keys","included","setIncluded","initialExtent","d3","toArray","d","left","right","has","min","x","y","max","includedExtent","extent","daysToStates","second","Math","round","v","keySeq","minDay","maxDay","paths","console","log","domain","range","line","p","s","isHighlighted","a","push","Fragment","key","style","transition","fill","stroke","opacity","onMouseEnter","onMouseLeave","oldState","onClick","of","tooltipPath","tooltip","pageToDay","dayToPage","xpos","strokeWidth","pointerEvents","fontSize","userSelect","get","dy","valueSeq","stateList","isIncluded","delete","add","onDoubleClick","selectionArea","rectExtent","to","from","overflow","xInverse","yInverse","flattenExtent","minX","maxX","minY","maxY","float","onMouseDown","pageX","pageY","onMouseMove","onMouseUp","flatExtent","className","viewBox","fe","type","setState","fetch","then","res","json","error","message","Boolean","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.28583ae2.chunk.js","sourcesContent":["import React from \"react\";\nimport * as d3 from \"d3\";\nimport { Collection, List, Set } from \"immutable\";\nimport { isPresent } from \"ts-is-present\";\nimport { Spring } from \"react-spring/renderprops\";\n\ntype RawEntry = { state: string; positive: number; dateChecked: string };\ntype Entry = { state: string; positive: number; dateChecked: number };\ntype XY = { x: number; y: number };\ntype Extent = { min: XY; max: XY };\ntype FlatExtent = { minX: number; minY: number; maxX: number; maxY: number };\n\nconst highlightColor = \"#ff0079\";\nconst defaultColor = \"#00b6c6\";\nconst margin = { right: 100, bottom: 100 };\n\nfunction datediff(first: number, second: number): number {\n  // Take the difference between the dates and divide by milliseconds per day.\n  // Round to nearest whole number to deal with DST.\n  return Math.round((second - first) / (1000 * 60 * 60 * 24));\n}\n\nconst Chart: React.FC<{ rawData: RawEntry[] }> = ({ rawData }) => {\n  React.useEffect(() => {\n    const listener = () =>\n      setWindow({ width: window.innerWidth, height: window.innerHeight });\n    window.addEventListener(\"resize\", listener);\n    return () => window.removeEventListener(\"resize\", listener);\n  }, []);\n\n  const [mousePos, setMousePos] = React.useState<XY | null>(null);\n  const [highlightedState, setHighlightedState] = React.useState<string | null>(\n    null\n  );\n  const [{ width, height }, setWindow] = React.useState<{\n    width: number;\n    height: number;\n  }>({ width: window.innerWidth, height: window.innerHeight });\n\n  const [selecting, setSelecting] = React.useState<null | {\n    from: XY;\n    to: null | XY;\n  }>(null);\n\n  const [zoom, setZoom] = React.useState<Extent | null>(null);\n\n  const parsedData = React.useMemo(\n    () =>\n      List(rawData)\n        .map((e) => {\n          const date = new Date(e.dateChecked).valueOf();\n          return isNaN(date) ? null : { ...e, dateChecked: date };\n        })\n        .filter(isPresent),\n    [rawData]\n  );\n\n  const statesToDates = React.useMemo(\n    () =>\n      parsedData\n        .groupBy((e) => e.state)\n        .map((entries) =>\n          entries\n            .groupBy((e) => e.dateChecked)\n            .map((entries: Collection<number, Entry>): Entry => entries.first())\n            .map((e) => e.positive)\n            .toOrderedMap()\n            .sortBy((_, k) => k)\n        )\n        .toOrderedMap()\n        .sortBy((entries) => -(entries.last() as number)),\n    [parsedData]\n  );\n\n  const [included, setIncluded] = React.useState<Set<string>>(\n    Set(statesToDates.keys())\n  );\n\n  const initialExtent = React.useMemo(() => {\n    const [left, right] = d3.extent(\n      parsedData.toArray(),\n      (d) => d.dateChecked\n    ) as number[];\n    const [top, bottom] = d3.extent(\n      parsedData.filter((e) => included.has(e.state)).toArray(),\n      (d) => d.positive\n    ) as number[];\n    return {\n      min: { x: left, y: top },\n      max: { x: right, y: bottom },\n    };\n  }, [parsedData, included]);\n\n  const includedExtent = React.useMemo(() => {\n    const [left, right] = d3.extent(\n      parsedData.filter((e) => included.has(e.state)).toArray(),\n      (d) => d.dateChecked\n    ) as number[];\n    const [top, bottom] = d3.extent(\n      parsedData.filter((e) => included.has(e.state)).toArray(),\n      (d) => d.positive\n    ) as number[];\n    return {\n      min: { x: left, y: top },\n      max: { x: right, y: bottom },\n    };\n  }, [parsedData, included]);\n\n  const extent = zoom ? zoom : includedExtent;\n\n  const daysToStates = React.useMemo(\n    () =>\n      parsedData\n        .groupBy((e) => {\n          return datediff(initialExtent.min.x, e.dateChecked);\n        })\n        .map((entries) =>\n          entries\n            .groupBy((e) => e.state)\n            .map((entries: Collection<number, Entry>): Entry => entries.first())\n            .map((e) => e.positive)\n            .toOrderedMap()\n            .sortBy((v) => -v)\n        )\n        .toOrderedMap()\n        .sortBy((entries) => -(entries.last() as number)),\n    [parsedData, initialExtent]\n  );\n\n  const [minDay, maxDay] = React.useMemo(\n    () => d3.extent(daysToStates.keySeq().toArray(), (d) => d) as number[],\n    [daysToStates]\n  );\n\n  const paths = React.useMemo(\n    () => (extent) => {\n      console.log(extent);\n      const x = d3\n        .scaleLinear()\n        .domain([extent.min.x, extent.max.x])\n        .range([0, width - margin.right]);\n\n      const y = d3\n        .scaleLinear()\n        .domain([extent.min.y, extent.max.y])\n        .range([height - margin.bottom, 0]);\n\n      const line = d3\n        .line()\n        .x(([d, _]) => x(d))\n        .y(([_, p]) => y(p));\n\n      return statesToDates\n        .filter((_, state) => included.has(state))\n        .map((d, s) => {\n          const isHighlighted = s === highlightedState;\n          const a = List(d.entries())\n            .push([includedExtent.max.x, 0])\n            .push([includedExtent.min.x, 0]);\n\n          return (\n            <React.Fragment key={s}>\n              <path\n                style={{ transition: \"width 2s\" }}\n                fill=\"none\"\n                stroke={isHighlighted ? highlightColor : \"none\"}\n                d={`${line(d.toArray())}`}\n                opacity={isHighlighted ? 0.7 : 0.2}\n              />\n              <path\n                style={{ transition: \"width 2s\" }}\n                fill={defaultColor}\n                d={`${line(a.toArray())}`}\n                opacity={isHighlighted ? 0.7 : 0.2}\n                onMouseEnter={() => setHighlightedState(s)}\n                onMouseLeave={() =>\n                  setHighlightedState((oldState) =>\n                    oldState === s ? null : oldState\n                  )\n                }\n                onClick={() => setIncluded(Set.of(s))}\n              />\n            </React.Fragment>\n          );\n        })\n        .toArray();\n    },\n    [\n      extent,\n      highlightedState,\n      statesToDates,\n      includedExtent,\n      height,\n      width,\n      included,\n    ]\n  );\n\n  let tooltipPath: JSX.Element | null = null;\n  let tooltip: JSX.Element | null = null;\n  if (mousePos != null && mousePos.x < width - margin.right) {\n    const line = d3\n      .line()\n      .x(([a, _]) => a)\n      .y(([_, b]) => b);\n    const pageToDay = d3\n      .scaleLinear()\n      .domain([0, width - margin.right])\n      .range([minDay, maxDay]);\n    const dayToPage = d3\n      .scaleLinear()\n      .domain([minDay, maxDay])\n      .range([0, width - margin.right]);\n    const xpos = Math.round(pageToDay(mousePos.x));\n    tooltipPath = (\n      <path\n        fill=\"none\"\n        stroke={\"black\"}\n        strokeWidth={0.15}\n        d={`${line([\n          [dayToPage(xpos), 0],\n          [dayToPage(xpos), height],\n        ])}`}\n        style={{ pointerEvents: \"none\" }}\n      />\n    );\n    tooltip = (\n      <text style={{ fontSize: 10, userSelect: \"none\" }}>\n        {daysToStates\n          .get(xpos)\n          ?.filter((_, s) => included.has(s))\n          .map((d, s) => {\n            const fill = s === highlightedState ? highlightColor : \"black\";\n            return (\n              <tspan\n                key={`${s}-tooltip`}\n                x={\n                  mousePos.x + 80 < width - margin.right\n                    ? mousePos.x + 30\n                    : mousePos.x - 60\n                }\n                dy={12}\n                fill={fill}\n              >\n                {s}: {d}\n              </tspan>\n            );\n          })\n          .valueSeq()\n          .toArray()}\n      </text>\n    );\n  }\n\n  const stateList = React.useMemo(\n    () => (\n      <text style={{ fontSize: 10, userSelect: \"none\" }}>\n        {statesToDates\n          .sortBy((_, k) => k)\n          .map((d, s) => {\n            const isIncluded = included.has(s);\n            const fill = isIncluded ? \"black\" : \"lightgrey\";\n            return (\n              <tspan\n                key={`${s}-toggle`}\n                x={10}\n                dy={12.8}\n                fill={fill}\n                onClick={() => {\n                  setIncluded(\n                    isIncluded ? included.delete(s) : included.add(s)\n                  );\n                }}\n                onDoubleClick={() => {\n                  setIncluded(Set.of(s));\n                  setZoom(null);\n                }}\n              >\n                {s}\n              </tspan>\n            );\n          })\n          .valueSeq()\n          .toArray()}\n      </text>\n    ),\n    [included, statesToDates]\n  );\n\n  let selectionArea: null | JSX.Element = null;\n  let rectExtent: null | Extent = null;\n  if (selecting && selecting.to) {\n    rectExtent = {\n      min: {\n        x: Math.min(selecting.from.x, selecting.to.x),\n        y: Math.min(selecting.from.y, selecting.to.y),\n      },\n      max: {\n        x: Math.max(selecting.from.x, selecting.to.x),\n        y: Math.max(selecting.from.y, selecting.to.y),\n      },\n    };\n    selectionArea = (\n      <svg style={{ overflow: \"visible\" }}>\n        <rect\n          x={rectExtent.min.x}\n          y={rectExtent.min.y}\n          width={rectExtent.max.x - rectExtent.min.x}\n          height={rectExtent.max.y - rectExtent.min.y}\n          fill=\"black\"\n          opacity={0.3}\n        />\n      </svg>\n    );\n  }\n\n  const xInverse = d3\n    .scaleLinear()\n    .domain([0, width - margin.right])\n    .range([extent.min.x, extent.max.x]);\n\n  const yInverse = d3\n    .scaleLinear()\n    .domain([0, height - margin.bottom])\n    .range([extent.max.y, extent.min.y]);\n\n  const flattenExtent = (e: Extent): FlatExtent => ({\n    minX: e.min.x,\n    maxX: e.max.x,\n    minY: e.min.y,\n    maxY: e.max.y,\n  });\n\n  const unflattenExtent = (fe: FlatExtent): Extent => ({\n    min: { x: fe.minX, y: fe.minY },\n    max: { x: fe.maxX, y: fe.maxY },\n  });\n\n  return (\n    <div>\n      <div style={{ float: \"right\", width: width, height: 0 }}>\n        {selectionArea}\n      </div>\n      <div\n        style={{ float: \"left\", width: width - margin.right }}\n        onDoubleClick={() => {\n          setIncluded(Set(statesToDates.keys()));\n          setZoom(null);\n          setSelecting(null);\n        }}\n        onClick={() => setSelecting(null)}\n        onMouseLeave={() => setSelecting(null)}\n        onMouseDown={(e) => {\n          setSelecting({\n            from: { x: e.pageX, y: e.pageY },\n            to: null,\n          });\n        }}\n        onMouseMove={(e) => {\n          if (selecting) {\n            setSelecting({\n              ...selecting,\n              to: { x: e.pageX, y: e.pageY },\n            });\n          }\n        }}\n        onMouseUp={(e) => {\n          if (selecting && rectExtent) {\n            const rectSize =\n              (rectExtent.max.x - rectExtent.min.x) *\n              (rectExtent.max.y - rectExtent.min.y);\n            if (rectSize > 50) {\n              setZoom({\n                min: {\n                  x: xInverse(rectExtent.min.x),\n                  y: yInverse(rectExtent.max.y),\n                },\n                max: {\n                  x: xInverse(rectExtent.max.x),\n                  y: yInverse(rectExtent.min.y),\n                },\n              });\n            }\n          } else {\n            setZoom(null);\n            setSelecting(null);\n          }\n        }}\n      >\n        <Spring to={zoom ? flattenExtent(zoom) : flattenExtent(includedExtent)}>\n          {(flatExtent: FlatExtent) => {\n            return (\n              <svg\n                className=\"d3-component\"\n                viewBox={`${[\n                  0,\n                  0,\n                  width - margin.right,\n                  height - margin.bottom,\n                ]}`}\n                onMouseMove={(e) => setMousePos({ x: e.pageX, y: e.pageY })}\n              >\n                {paths(unflattenExtent(flatExtent))}\n                {tooltipPath}\n                {tooltip}\n              </svg>\n            );\n          }}\n        </Spring>\n      </div>\n      <div style={{ float: \"left\", width: margin.right }}>\n        <svg style={{ overflow: \"visible\" }}>{stateList}</svg>\n      </div>\n    </div>\n  );\n};\n\nexport default function () {\n  type State =\n    | { type: \"loading\" }\n    | { type: \"error\"; error: any }\n    | { type: \"loaded\"; rawData: RawEntry[] };\n\n  const [state, setState] = React.useState<State>({ type: \"loading\" });\n\n  React.useEffect(() => {\n    fetch(\"https://covidtracking.com/api/states/daily\")\n      .then((res) => res.json())\n      .then(\n        (rawData) => setState({ type: \"loaded\", rawData }),\n        (error) => setState({ type: \"error\", error })\n      );\n  }, []);\n\n  switch (state.type) {\n    case \"loading\":\n      return <div>Loading…</div>;\n    case \"error\":\n      return <div>Error: {state.error.message}</div>;\n    case \"loaded\":\n      return <Chart rawData={state.rawData} />;\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}